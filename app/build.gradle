apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 28
    buildToolsVersion "28"

    defaultConfig {
        applicationId "vladus177.com.albums"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    flavorDimensions "tier"
    productFlavors {
        prod {
            resValue "string", "app_name", "Albums"
            dimension "tier"
            buildConfigField "String", "URL_BASE", "\"https://jsonplaceholder.typicode.com/\""
        }

        dummy {
            applicationIdSuffix = ".dummy"
            versionNameSuffix = "-dummy"
            resValue "string", "app_name", "AlbumsDummy"
            dimension "tier"
            buildConfigField "String", "URL_BASE", "\"http://mock.api/\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
    sourceSets {
        prod {
            java.srcDir("src/prod/java")
            res.srcDir("src/prod/res")
        }

        dummy {
            java.srcDir("src/dummy/java")
            res.srcDir("src/dummy/res")
            assets.srcDirs = ['src/dummy/assets', 'src/dummy/assets/']
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation "com.google.android.material:material:1.2.1"

    // Tests
    // Espresso dependencies
    testImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    testImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    testImplementation 'androidx.test.espresso:espresso-accessibility:3.3.0'
    testImplementation 'androidx.test.espresso.idling:idling-concurrent:3.3.0'
    testImplementation 'androidx.test.espresso:espresso-idling-resource:3.4.0-alpha02'

    debugImplementation 'androidx.fragment:fragment-testing:1.2.5'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'org.mockito:mockito-inline:3.2.4'
    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.robolectric:robolectric:4.2.1'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    // Assertions
    testImplementation 'androidx.test.ext:truth:1.3.0'
    implementation 'com.google.truth:truth:1.0'

    // Core library
    testImplementation 'androidx.test:core:1.3.0'

    // AndroidJUnitRunner and JUnit Rules
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'androidx.test:rules:1.3.0'
    testImplementation 'androidx.test.ext:junit:1.1.2'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    //dagger
    implementation "com.google.dagger:dagger:2.27"
    implementation "com.google.dagger:dagger-android-support:2.27"
    kapt "com.google.dagger:dagger-compiler:2.27"
    kapt "com.google.dagger:dagger-android-processor:2.27"

    //Rx
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.20'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'androidx.room:room-rxjava2:2.2.5'

    // Architecture Components
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    implementation 'androidx.room:room-ktx:2.2.5'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

}
